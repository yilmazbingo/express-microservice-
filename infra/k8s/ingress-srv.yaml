apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-srv
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/use-regex: "true"
    # nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  # ingressClassName: external-lb
  # class: acme-lb
  # hostAliases:
  #   - ip: "172.17.0.1"
  #     hostnames:
  #     - "host.minikube.internal"
  defaultBackend:
    service:
      name: nginx-ingress-default-backend
      port:
        number: 80

  rules:
    # we can host one single app at one single domain. BUt with Kubernetes we can host ton of infrastructure. we are not limited to just hosting one singular app. we could host many different apps at many different domains inside a single kubernetes cluster. ingress-nginx setup assuming u might be hosting many different apps at different domains. host property is saying that this config after me is tied to posts.com.
    # bad side is dev env, we are used to accessing all of our running servers at localhost. we have to trick our local machine into thinking that "posts.com" is equivalent to localhost.
    # /etc/hosts
    # code /etc/hosts
    # since i am using ingress-nginx with minikube i need "minikube ip" "172.17.0.3 posts.com"
    # so when we visit "posts.com" that request will be sent to localhost. that request will go to ingress-srv, nginx will think we are trying to visit posts.com and then it will apply the routing rules after posts
    # posts.com/posts will make request to "posts-clusterip-srv"
    # we have to add routing config for all services
    # posts.com is arbitrary
    # set up react-server-pod. we need to make sure inside of react server, our actual react code is going to make requests to post.com. this is where our kubernetes cluster is located. if we make a request to posts.com, react app is going to attempt to connect to that ingress-nginx pod. so we need to modify index.js of react. localhost code should be posts.com
    # after setting up container, deployment and service, we have to write the routing rules.
    - host: posts.com
      http:
        paths:
          # ingress does not know about http methods. to differetntiate GET /posts and POST /posts, I add /posts/create
          - path: /posts/create
            pathType: Exact
            backend:
              service:
                name: posts-clusterip-srv
                port:
                  number: 4000
          - path: /posts
            pathType: Exact
            backend:
              service:
                name: query-srv
                port:
                  number: 4002
            # supposed to be /posts/:id/comments but nginx does not know anything about it.
            # IN ORDER TO USE REGULAR EXPRESSION add 1 config to the annotations
          - path: /posts/?(.*)/comments
            pathType: Exact
            backend:
              service:
                name: comments-srv
                port:
                  number: 4001
            # think this liek a react app routing. more specific to more generic
          - path: /?(.*)
            pathType: Exact
            backend:
              service:
                name: client-srv
                port:
                  number: 8080

            # backend:
            #   serviceName: posts-clusterip-srv
            #   servicePort: 4000
